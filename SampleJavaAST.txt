Java to C++ Translator, v. 2.3.1, (C) 2013 <Group Name>
Processing Translator.java ...
CompilationUnit(
  PackageDeclaration(
    null,
    QualifiedIdentifier(
      "xtc",
      "oop"
    )
  ),
  ImportDeclaration(
    null,
    QualifiedIdentifier(
      "java",
      "io",
      "File"
    ),
    null
  ),
  ImportDeclaration(
    null,
    QualifiedIdentifier(
      "java",
      "io",
      "IOException"
    ),
    null
  ),
  ImportDeclaration(
    null,
    QualifiedIdentifier(
      "java",
      "io",
      "Reader"
    ),
    null
  ),
  ImportDeclaration(
    null,
    QualifiedIdentifier(
      "xtc",
      "lang",
      "JavaFiveParser"
    ),
    null
  ),
  ImportDeclaration(
    null,
    QualifiedIdentifier(
      "xtc",
      "lang",
      "JavaPrinter"
    ),
    null
  ),
  ImportDeclaration(
    null,
    QualifiedIdentifier(
      "xtc",
      "parser",
      "ParseException"
    ),
    null
  ),
  ImportDeclaration(
    null,
    QualifiedIdentifier(
      "xtc",
      "parser",
      "Result"
    ),
    null
  ),
  ImportDeclaration(
    null,
    QualifiedIdentifier(
      "xtc",
      "tree",
      "GNode"
    ),
    null
  ),
  ImportDeclaration(
    null,
    QualifiedIdentifier(
      "xtc",
      "tree",
      "Node"
    ),
    null
  ),
  ImportDeclaration(
    null,
    QualifiedIdentifier(
      "xtc",
      "tree",
      "Visitor"
    ),
    null
  ),
  ImportDeclaration(
    null,
    QualifiedIdentifier(
      "xtc",
      "util",
      "Tool"
    ),
    null
  ),
  ClassDeclaration(
    Modifiers(
      Modifier(
        "public"
      )
    ),
    "Translator",
    null,
    Extension(
      Type(
        QualifiedIdentifier(
          "Tool"
        ),
        null
      )
    ),
    null,
    ClassBody(
      ConstructorDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        "Translator",
        FormalParameters(),
        null,
        Block()
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "String"
          ),
          null
        ),
        "getName",
        FormalParameters(),
        null,
        null,
        Block(
          ReturnStatement(
            StringLiteral(
              "\"Java to C++ Translator\""
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "String"
          ),
          null
        ),
        "getCopy",
        FormalParameters(),
        null,
        null,
        Block(
          ReturnStatement(
            StringLiteral(
              "\"(C) 2013 <Group Name>\""
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        VoidType(),
        "init",
        FormalParameters(),
        null,
        null,
        Block(
          ExpressionStatement(
            CallExpression(
              SuperExpression(
                null
              ),
              null,
              "init",
              Arguments()
            )
          ),
          ExpressionStatement(
            CallExpression(
              CallExpression(
                CallExpression(
                  PrimaryIdentifier(
                    "runtime"
                  ),
                  null,
                  "bool",
                  Arguments(
                    StringLiteral(
                      "\"printJavaAST\""
                    ),
                    StringLiteral(
                      "\"printJavaAST\""
                    ),
                    BooleanLiteral(
                      "false"
                    ),
                    StringLiteral(
                      "\"Print Java AST.\""
                    )
                  )
                ),
                null,
                "bool",
                Arguments(
                  StringLiteral(
                    "\"printJavaCode\""
                  ),
                  StringLiteral(
                    "\"printJavaCode\""
                  ),
                  BooleanLiteral(
                    "false"
                  ),
                  StringLiteral(
                    "\"Print Java code.\""
                  )
                )
              ),
              null,
              "bool",
              Arguments(
                StringLiteral(
                  "\"countMethods\""
                ),
                StringLiteral(
                  "\"countMethods\""
                ),
                BooleanLiteral(
                  "false"
                ),
                StringLiteral(
                  "\"Count all Java methods.\""
                )
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        VoidType(),
        "prepare",
        FormalParameters(),
        null,
        null,
        Block(
          ExpressionStatement(
            CallExpression(
              SuperExpression(
                null
              ),
              null,
              "prepare",
              Arguments()
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "File"
          ),
          null
        ),
        "locate",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              null
            ),
            null,
            "name",
            null
          )
        ),
        null,
        ThrowsClause(
          QualifiedIdentifier(
            "IOException"
          )
        ),
        Block(
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "File"
              ),
              null
            ),
            Declarators(
              Declarator(
                "file",
                null,
                CallExpression(
                  SuperExpression(
                    null
                  ),
                  null,
                  "locate",
                  Arguments(
                    PrimaryIdentifier(
                      "name"
                    )
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            RelationalExpression(
              SelectionExpression(
                PrimaryIdentifier(
                  "Integer"
                ),
                "MAX_VALUE"
              ),
              "<",
              CallExpression(
                PrimaryIdentifier(
                  "file"
                ),
                null,
                "length",
                Arguments()
              )
            ),
            Block(
              ThrowStatement(
                NewClassExpression(
                  null,
                  null,
                  QualifiedIdentifier(
                    "IllegalArgumentException"
                  ),
                  Arguments(
                    AdditiveExpression(
                      PrimaryIdentifier(
                        "file"
                      ),
                      "+",
                      StringLiteral(
                        "\": file too large\""
                      )
                    )
                  ),
                  null
                )
              )
            ),
            null
          ),
          ReturnStatement(
            PrimaryIdentifier(
              "file"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Node"
          ),
          null
        ),
        "parse",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Reader"
              ),
              null
            ),
            null,
            "in",
            null
          ),
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "File"
              ),
              null
            ),
            null,
            "file",
            null
          )
        ),
        null,
        ThrowsClause(
          QualifiedIdentifier(
            "IOException"
          ),
          QualifiedIdentifier(
            "ParseException"
          )
        ),
        Block(
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "JavaFiveParser"
              ),
              null
            ),
            Declarators(
              Declarator(
                "parser",
                null,
                NewClassExpression(
                  null,
                  null,
                  QualifiedIdentifier(
                    "JavaFiveParser"
                  ),
                  Arguments(
                    PrimaryIdentifier(
                      "in"
                    ),
                    CallExpression(
                      PrimaryIdentifier(
                        "file"
                      ),
                      null,
                      "toString",
                      Arguments()
                    ),
                    BasicCastExpression(
                      PrimitiveType(
                        "int"
                      ),
                      null,
                      CallExpression(
                        PrimaryIdentifier(
                          "file"
                        ),
                        null,
                        "length",
                        Arguments()
                      )
                    )
                  ),
                  null
                )
              )
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Result"
              ),
              null
            ),
            Declarators(
              Declarator(
                "result",
                null,
                CallExpression(
                  PrimaryIdentifier(
                    "parser"
                  ),
                  null,
                  "pCompilationUnit",
                  Arguments(
                    IntegerLiteral(
                      "0"
                    )
                  )
                )
              )
            )
          ),
          ReturnStatement(
            CastExpression(
              Type(
                QualifiedIdentifier(
                  "Node"
                ),
                null
              ),
              CallExpression(
                PrimaryIdentifier(
                  "parser"
                ),
                null,
                "value",
                Arguments(
                  PrimaryIdentifier(
                    "result"
                  )
                )
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        VoidType(),
        "process",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Node"
              ),
              null
            ),
            null,
            "node",
            null
          )
        ),
        null,
        null,
        Block(
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "runtime"
              ),
              null,
              "test",
              Arguments(
                StringLiteral(
                  "\"printJavaAST\""
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  CallExpression(
                    CallExpression(
                      CallExpression(
                        PrimaryIdentifier(
                          "runtime"
                        ),
                        null,
                        "console",
                        Arguments()
                      ),
                      null,
                      "format",
                      Arguments(
                        PrimaryIdentifier(
                          "node"
                        )
                      )
                    ),
                    null,
                    "pln",
                    Arguments()
                  ),
                  null,
                  "flush",
                  Arguments()
                )
              )
            ),
            null
          ),
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "runtime"
              ),
              null,
              "test",
              Arguments(
                StringLiteral(
                  "\"printJavaCode\""
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  NewClassExpression(
                    null,
                    null,
                    QualifiedIdentifier(
                      "JavaPrinter"
                    ),
                    Arguments(
                      CallExpression(
                        PrimaryIdentifier(
                          "runtime"
                        ),
                        null,
                        "console",
                        Arguments()
                      )
                    ),
                    null
                  ),
                  null,
                  "dispatch",
                  Arguments(
                    PrimaryIdentifier(
                      "node"
                    )
                  )
                )
              ),
              ExpressionStatement(
                CallExpression(
                  CallExpression(
                    PrimaryIdentifier(
                      "runtime"
                    ),
                    null,
                    "console",
                    Arguments()
                  ),
                  null,
                  "flush",
                  Arguments()
                )
              )
            ),
            null
          ),
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "runtime"
              ),
              null,
              "test",
              Arguments(
                StringLiteral(
                  "\"countMethods\""
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  NewClassExpression(
                    null,
                    null,
                    QualifiedIdentifier(
                      "Visitor"
                    ),
                    Arguments(),
                    ClassBody(
                      FieldDeclaration(
                        Modifiers(
                          Modifier(
                            "private"
                          )
                        ),
                        Type(
                          PrimitiveType(
                            "int"
                          ),
                          null
                        ),
                        Declarators(
                          Declarator(
                            "count",
                            null,
                            IntegerLiteral(
                              "0"
                            )
                          )
                        )
                      ),
                      MethodDeclaration(
                        Modifiers(
                          Modifier(
                            "public"
                          )
                        ),
                        null,
                        VoidType(),
                        "visitCompilationUnit",
                        FormalParameters(
                          FormalParameter(
                            Modifiers(),
                            Type(
                              QualifiedIdentifier(
                                "GNode"
                              ),
                              null
                            ),
                            null,
                            "n",
                            null
                          )
                        ),
                        null,
                        null,
                        Block(
                          ExpressionStatement(
                            CallExpression(
                              null,
                              null,
                              "visit",
                              Arguments(
                                PrimaryIdentifier(
                                  "n"
                                )
                              )
                            )
                          ),
                          ExpressionStatement(
                            CallExpression(
                              CallExpression(
                                CallExpression(
                                  CallExpression(
                                    CallExpression(
                                      PrimaryIdentifier(
                                        "runtime"
                                      ),
                                      null,
                                      "console",
                                      Arguments()
                                    ),
                                    null,
                                    "p",
                                    Arguments(
                                      StringLiteral(
                                        "\"Number of methods: \""
                                      )
                                    )
                                  ),
                                  null,
                                  "p",
                                  Arguments(
                                    PrimaryIdentifier(
                                      "count"
                                    )
                                  )
                                ),
                                null,
                                "pln",
                                Arguments()
                              ),
                              null,
                              "flush",
                              Arguments()
                            )
                          )
                        )
                      ),
                      MethodDeclaration(
                        Modifiers(
                          Modifier(
                            "public"
                          )
                        ),
                        null,
                        VoidType(),
                        "visitMethodDeclaration",
                        FormalParameters(
                          FormalParameter(
                            Modifiers(),
                            Type(
                              QualifiedIdentifier(
                                "GNode"
                              ),
                              null
                            ),
                            null,
                            "n",
                            null
                          )
                        ),
                        null,
                        null,
                        Block(
                          ExpressionStatement(
                            CallExpression(
                              CallExpression(
                                CallExpression(
                                  CallExpression(
                                    PrimaryIdentifier(
                                      "runtime"
                                    ),
                                    null,
                                    "console",
                                    Arguments()
                                  ),
                                  null,
                                  "p",
                                  Arguments(
                                    StringLiteral(
                                      "\"Name of node: \""
                                    )
                                  )
                                ),
                                null,
                                "p",
                                Arguments(
                                  CallExpression(
                                    PrimaryIdentifier(
                                      "n"
                                    ),
                                    null,
                                    "getName",
                                    Arguments()
                                  )
                                )
                              ),
                              null,
                              "pln",
                              Arguments()
                            )
                          ),
                          ExpressionStatement(
                            CallExpression(
                              CallExpression(
                                CallExpression(
                                  CallExpression(
                                    PrimaryIdentifier(
                                      "runtime"
                                    ),
                                    null,
                                    "console",
                                    Arguments()
                                  ),
                                  null,
                                  "p",
                                  Arguments(
                                    StringLiteral(
                                      "\"Name of method: \""
                                    )
                                  )
                                ),
                                null,
                                "p",
                                Arguments(
                                  CallExpression(
                                    PrimaryIdentifier(
                                      "n"
                                    ),
                                    null,
                                    "getString",
                                    Arguments(
                                      IntegerLiteral(
                                        "3"
                                      )
                                    )
                                  )
                                )
                              ),
                              null,
                              "pln",
                              Arguments()
                            )
                          ),
                          ExpressionStatement(
                            CallExpression(
                              null,
                              null,
                              "visit",
                              Arguments(
                                PrimaryIdentifier(
                                  "n"
                                )
                              )
                            )
                          ),
                          ExpressionStatement(
                            PostfixExpression(
                              PrimaryIdentifier(
                                "count"
                              ),
                              "++"
                            )
                          )
                        )
                      ),
                      MethodDeclaration(
                        Modifiers(
                          Modifier(
                            "public"
                          )
                        ),
                        null,
                        VoidType(),
                        "visit",
                        FormalParameters(
                          FormalParameter(
                            Modifiers(),
                            Type(
                              QualifiedIdentifier(
                                "Node"
                              ),
                              null
                            ),
                            null,
                            "n",
                            null
                          )
                        ),
                        null,
                        null,
                        Block(
                          ForStatement(
                            EnhancedForControl(
                              Modifiers(),
                              Type(
                                QualifiedIdentifier(
                                  "Object"
                                ),
                                null
                              ),
                              "o",
                              PrimaryIdentifier(
                                "n"
                              )
                            ),
                            ConditionalStatement(
                              InstanceOfExpression(
                                PrimaryIdentifier(
                                  "o"
                                ),
                                Type(
                                  QualifiedIdentifier(
                                    "Node"
                                  ),
                                  null
                                )
                              ),
                              ExpressionStatement(
                                CallExpression(
                                  null,
                                  null,
                                  "dispatch",
                                  Arguments(
                                    CastExpression(
                                      Type(
                                        QualifiedIdentifier(
                                          "Node"
                                        ),
                                        null
                                      ),
                                      PrimaryIdentifier(
                                        "o"
                                      )
                                    )
                                  )
                                )
                              ),
                              null
                            )
                          )
                        )
                      )
                    )
                  ),
                  null,
                  "dispatch",
                  Arguments(
                    PrimaryIdentifier(
                      "node"
                    )
                  )
                )
              )
            ),
            null
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          ),
          Modifier(
            "static"
          )
        ),
        null,
        VoidType(),
        "main",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            null,
            "args",
            null
          )
        ),
        null,
        null,
        Block(
          ExpressionStatement(
            CallExpression(
              NewClassExpression(
                null,
                null,
                QualifiedIdentifier(
                  "Translator"
                ),
                Arguments(),
                null
              ),
              null,
              "run",
              Arguments(
                PrimaryIdentifier(
                  "args"
                )
              )
            )
          )
        )
      )
    )
  )
)
